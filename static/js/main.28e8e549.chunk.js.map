{"version":3,"sources":["assets/images sync nonrecursive //.(png|jpe?g|svg)$","assets/images/john.png","assets/images/mark.png","assets/images/mary.png","employees/service/employee-service.js","employees/DisplayEmployee.js","employees/ListEmployees.js","employees/CreateEmployee.js","employees/EmployDetails.js","App.js","serviceWorker.js","index.js"],"names":["map","./john.png","./mark.png","./mary.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","listEmployees","name","gender","contactPreference","email","dateOfBirth","Date","department","isActive","photoPath","phoneNumber","getEmployee","find","toString","getImages","r","images","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","replace","err","return","importAll","require","DisplayEmployee","className","this","props","selectedEmployeeId","employee","react_default","a","createElement","handleSelectedEmployee","onClick","src","employeeService","alt","Moment","format","Component","ListEmployees","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","dataFromChild","setState","history","push","concat","_this2","employees","employees_DisplayEmployee","key","handleClick","bind","match","params","defaultEmployee","fullName","password","confirmPassword","CreateEmployee","assign","previewPhoto","employeeForm","invalid","fullNameControl","touched","hasError","hasSuccess","emailControl","phoneNumberControl","contactPreferenceControl","isActiveControl","genderControl","departmentControl","selectedId","passwordControl","confirmPasswordControl","passwordMatch","dirty","handleChange","assertThisInitialized","handleRadioChange","handleCheckboxChange","handleSelectChange","handleDateChange","handlePhotoChange","handlePhotoToggle","handleSubmit","validate","event","target","handleDynamicRequired","checked","date","prevState","console","log","JSON","stringify","preventDefault","control","type","required","trim","length","defineProperty","handleSaveButton","pattern","RegExp","test","document","getElementById","getElementsByName","enableHasError","controlName","enable","onSubmit","htmlFor","onChange","onBlur","defaultValue","disabled","es","selected","height","width","Prompt","when","message","location","EmployeeDetails","parseInt","Link","to","getNextEmployee","App","BrowserRouter","Switch","Route","exact","path","component","employees_ListEmployees","Boolean","window","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28e8e549.chunk.js","sourcesContent":["var map = {\n\t\"./john.png\": 42,\n\t\"./mark.png\": 43,\n\t\"./mary.png\": 44\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25;","module.exports = __webpack_public_path__ + \"static/media/john.2d9f64bb.png\";","module.exports = __webpack_public_path__ + \"static/media/mark.7d951de6.png\";","module.exports = __webpack_public_path__ + \"static/media/mary.6a8df8e0.png\";","const listEmployees = [\n    {\n      id: 1,\n      name: 'Mark',\n      gender: 'Male',\n      contactPreference: 'Email',\n      email: 'mark@pragimtech.com',\n      dateOfBirth: new Date('10/25/1988'),\n      department: 'IT',\n      isActive: true,\n      photoPath: 'mark.png'\n    },\n    {\n      id: 2,\n      name: 'Mary',\n      gender: 'Female',\n      contactPreference: 'Phone',\n      phoneNumber: 2345978640,\n      dateOfBirth: new Date('11/20/1979'),\n      department: 'HR',\n      isActive: true,\n      photoPath: 'mary.png'\n    },\n    {\n      id: 3,\n      name: 'John',\n      gender: 'Male',\n      contactPreference: 'Phone',\n      phoneNumber: 5432978640,\n      dateOfBirth: new Date('3/25/1976'),\n      department: 'IT',\n      isActive: false,\n      photoPath: 'john.png'\n    }]\n\nexport function getEmployees() {\n    return listEmployees;\n};\n\nexport function getEmployee(id) {\n    return listEmployees.find(e => e.id.toString() === id);\n};\n\nfunction importAll(r) {\n    let images = {};\n    for (var item of r.keys()) {\n      images[item.replace('./', '')] = r(item); \n    }\n    return images;\n  }\n  \nexport function getImages() {\n    return importAll(require.context('../../assets/images/', false, /\\.(png|jpe?g|svg)$/));\n}\n  ","import React, { Component } from 'react';\nimport Moment from 'moment';\nimport './DisplayEmployees.css';\nimport * as employeeService from './service/employee-service';\n\n\nclass DisplayEmployee extends Component {\n    handleSelectedEmployee() {\n        let className = \"panel panel-primary pointerCursor\";\n        if(this.props.selectedEmployeeId === this.props.employee.id.toString()) {\n            return className + \" panel-success\";\n        }\n        return className;\n    }\n    render() {\n      return (\n          <div className={this.handleSelectedEmployee()} onClick={this.props.onClick}>\n            <div className=\"panel-heading\">\n              <h3 className=\"panel-title\">{this.props.employee.name}</h3>\n            </div>\n            <div className=\"panel-body\">\n              <div className=\"col-xs-10\">\n                <div className=\"row vertical-align\">\n                  <div className=\"col-xs-4\">\n                    <img className=\"imageClass\" src={employeeService.getImages()[this.props.employee.photoPath]} alt=\"\"/>\n                  </div>\n\n                  <div className=\"col-xs-8\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Gender\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.gender}\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Date of Birth\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {Moment(this.props.employee.dateOfBirth).format('ll')}\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Contact Preference\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.contactPreference}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Phone\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.phoneNumber}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Email\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.email}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Department\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.department}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Is Active\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.isActive.toString()}\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n      )\n    }\n}\n\nexport default DisplayEmployee;\n","import React, { Component } from 'react';\r\nimport DisplayEmployee from './DisplayEmployee';\r\n\r\nclass ListEmployees extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state  = {\r\n      dataFromChild: null\r\n    };\r\n  }\r\n\r\n  // tricky parameter\r\n  handleClick(employee) {\r\n    this.setState({\r\n      dataFromChild: employee\r\n    });\r\n    this.props.history.push(`/employees/${employee.id}`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.employees.map(employee =>(  \r\n            <DisplayEmployee key={employee.id} employee={employee} onClick={this.handleClick.bind(this, employee)} selectedEmployeeId={this.props.match.params.id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListEmployees;\r\n","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { Prompt } from 'react-router-dom';\r\n \r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction importAll(r) {\r\n    let images = {};\r\n    for (var item of r.keys()) {\r\n      images[item.replace('./', '')] = r(item); \r\n    }\r\n    return images;\r\n  }\r\n  \r\nconst images = importAll(require.context('../assets/images/', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nconst defaultEmployee = { \r\n    fullName: '',\r\n    email: '',\r\n    phoneNumber:'',\r\n    contactPreference: '',\r\n    gender: '',\r\n    dateOfBirth: new Date(),\r\n    photoPath: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n};\r\n\r\nclass CreateEmployee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            employee: Object.assign({}, defaultEmployee),\r\n            previewPhoto: false,\r\n            employeeForm : {\r\n                invalid: true\r\n            },\r\n            fullNameControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n            },\r\n            emailControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n                invalid: false\r\n            },\r\n            phoneNumberControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n                invalid: undefined\r\n            },\r\n            contactPreferenceControl: {\r\n                touched: false,\r\n                hasError: true\r\n            },\r\n            isActiveControl: {\r\n                touched: false,\r\n                invalid: true\r\n            },\r\n            genderControl: {\r\n                touched: false,\r\n                hasError: true\r\n            },\r\n            departmentControl: {\r\n                selectedId: null,\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            passwordControl: {\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            confirmPasswordControl: {\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            passwordMatch: true,\r\n            dirty: false\r\n        };\r\n\r\n        this.handleChange          = this.handleChange.bind(this);\r\n        this.handleRadioChange     = this.handleRadioChange.bind(this);\r\n        this.handleCheckboxChange  = this.handleCheckboxChange.bind(this);\r\n        this.handleSelectChange    = this.handleSelectChange.bind(this);\r\n        this.handleDateChange      = this.handleDateChange.bind(this);\r\n        this.handlePhotoChange     = this.handlePhotoChange.bind(this);\r\n        this.handlePhotoToggle     = this.handlePhotoToggle.bind(this);\r\n        this.handleSubmit          = this.handleSubmit.bind(this);\r\n        this.validate              = this.validate.bind(this);\r\n    }\r\n\r\n    // handle the input change\r\n    handleChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.id] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n\r\n    // handle the radio button change\r\n    handleRadioChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n        this.handleDynamicRequired(event);\r\n    }\r\n\r\n    // handle the checkbox change\r\n    handleCheckboxChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.checked;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n\r\n    // handle the select change\r\n    handleSelectChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n    \r\n    // handle the change of date of birth\r\n    handleDateChange(date) {\r\n        let employee = this.state.employee;\r\n        employee.dateOfBirth = date;\r\n        this.setState({employee: employee});\r\n    }\r\n\r\n    // handle the photo change\r\n    handlePhotoChange(event) {\r\n        let employee = this.state.employee;\r\n        employee.photoPath = images[event.target.value];\r\n        this.setState({employee: employee});\r\n    }\r\n\r\n    // handle the photo toogle\r\n    handlePhotoToggle() {\r\n        this.setState(prevState => ({\r\n            previewPhoto: !prevState.previewPhoto\r\n        }));\r\n    }\r\n\r\n    // handle form submit\r\n    handleSubmit(event) {\r\n        console.log(JSON.stringify(this.state.employee));\r\n        event.preventDefault();\r\n    }\r\n\r\n    // handle validation\r\n    validate(event) {\r\n        // fake dirty check\r\n        for (var key in this.state.employee) {\r\n            console.log(key, this.state.employee[key]);\r\n            if(this.state.employee[key] !== defaultEmployee[key]){\r\n                this.setState({dirty: true});\r\n            }\r\n        }\r\n        \r\n        let hasError = false;\r\n        let control = `${event.target.id}Control`;\r\n        if(event.target.type === \"radio\" || event.target.type === \"checkbox\") {\r\n            control = `${event.target.name}Control`;\r\n        }\r\n        // required\r\n        if(event.target.required) {\r\n            if(event.target.value === null || event.target.value.trim().length === 0){\r\n                this.setState({[control]: {\r\n                    touched: true,\r\n                    hasError: true,\r\n                    hasSuccess: false\r\n                }}, function(){\r\n                    this.handleSaveButton();\r\n                });\r\n                hasError = true;\r\n            } else {\r\n                this.setState({[control]: {\r\n                    touched: true,\r\n                    hasError: false,\r\n                    hasSuccess: true\r\n                }}, function(){\r\n                    this.handleSaveButton();\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({[control]: {\r\n                touched: true,\r\n                hasError: false,\r\n                hasSuccess: false\r\n            }}, function(){\r\n                this.handleSaveButton();\r\n            });\r\n        }\r\n\r\n        // pattern match test\r\n        if(event.target.required && event.target.pattern){\r\n            if(RegExp(event.target.pattern).test(event.target.value)){\r\n                this.setState(prevState => ({[control]: {\r\n                    touched: true,\r\n                    invalid: false,\r\n                    hasError: false,\r\n                    hasSuccess: true\r\n                }}));\r\n            } else {\r\n                if(!hasError){\r\n                    // invalid pattern\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: true,\r\n                        hasError: true,\r\n                        hasSuccess: prevState[control].hasSuccess\r\n                    }}));\r\n                    hasError = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // enable/diable the form button\r\n    handleSaveButton() {\r\n        let email = document.getElementById(\"email\");\r\n        let phoneNumber = document.getElementById(\"phoneNumber\");\r\n        let isActive = document.getElementsByName(\"isActive\")[0];\r\n        let department = document.getElementById(\"department\");\r\n        let password = document.getElementById(\"password\");\r\n        let confirmPassword = document.getElementById(\"confirmPassword\");\r\n        if((this.state.fullNameControl.touched && this.state.fullNameControl.hasSuccess) && \r\n            (this.state.contactPreferenceControl.touched && !this.state.contactPreferenceControl.hasError) &&\r\n            ((email.required && this.state.emailControl.touched && this.state.emailControl.hasSuccess && !this.state.emailControl.invalid) || !email.required) && \r\n            ((phoneNumber.required && this.state.phoneNumberControl.touched && this.state.phoneNumberControl.hasSuccess) || !phoneNumber.required) &&\r\n            (this.state.genderControl.touched && this.state.genderControl.hasSuccess) && \r\n            ((isActive.required && !this.state.isActiveControl.invalid) || !isActive.required) &&\r\n            ((department.required && (this.state.departmentControl.touched && !this.state.departmentControl.hasError)) || !department.required) &&\r\n            ((password.required && (this.state.passwordControl.touched && !this.state.passwordControl.hasError)) || !password.required) &&\r\n            ((confirmPassword.required && (this.state.confirmPasswordControl.touched && !this.state.confirmPasswordControl.hasError)) || !confirmPassword.required) &&\r\n            this.state.employee.password === this.state.employee.confirmPassword){\r\n            this.setState({employeeForm : {invalid: false}});\r\n        } else {\r\n            this.setState({employeeForm : {invalid: true}});\r\n        }\r\n    }\r\n\r\n    // handle dynamic required validation\r\n    handleDynamicRequired(event) {\r\n        if(event.target.value === \"email\") {\r\n            this.enableHasError(\"email\", true);\r\n            let email = document.getElementById(\"email\");\r\n            let control = \"emailControl\";\r\n            // pattern match test\r\n            if(this.state.employee.contactPreference===\"email\" && email.pattern){\r\n                if(RegExp(email.pattern).test(email.value)){\r\n                    // valid\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: false,\r\n                        hasError: false,\r\n                        hasSuccess: true\r\n                    }}));\r\n                } else {\r\n                    // invalid pattern\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: true,\r\n                        hasError: true,\r\n                        hasSuccess: false\r\n                    }}));\r\n                }\r\n            }\r\n            this.enableHasError(\"phoneNumber\", false);\r\n        } else if(event.target.value === \"phoneNumber\") {\r\n            this.enableHasError(\"phoneNumber\", true);\r\n            this.enableHasError(\"email\", false);\r\n        }\r\n    }\r\n\r\n    // enable/disabe the hasError property\r\n    enableHasError(controlName, enable) {\r\n        let control = `${controlName}Control`;\r\n        let value = document.getElementById(controlName).value;\r\n        if(enable && (value === null || value.trim().length === 0)){\r\n            this.setState(prevState => ({[control]: {\r\n                hasError: true,\r\n                hasSuccess: false,\r\n            }}), function(){\r\n                this.handleSaveButton();\r\n            });\r\n        } else {\r\n            this.setState(prevState => ({[control]: {\r\n                hasError: false,\r\n                hasSuccess: false\r\n            }}), function(){\r\n                this.handleSaveButton();\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let departments = [\r\n            { id: 1, name: 'Help Desk' },\r\n            { id: 2, name: 'HR' },\r\n            { id: 3, name: 'IT' },\r\n            { id: 4, name: 'Payroll' }\r\n        ];\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"panel panel-primary\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">Create Employee</h3>\r\n                        </div>\r\n                        <div className=\"panel-body\">\r\n                            <div className={\"form-group \" \r\n                                + (this.state.fullNameControl.hasError ? \"has-error\" : \"\") \r\n                                + (this.state.fullNameControl.hasSuccess ? \"has-success\" : \"\")}>\r\n                                <label htmlFor =\"fullName\">Full Name</label>\r\n                                <input id=\"fullName\" type=\"text\" className=\"form-control\" name=\"fullName\" required\r\n                                    value={this.state.employee.fullName} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.fullNameControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Full Name is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.emailControl.hasError ? \"has-error\" : \"\") \r\n                                + (this.state.emailControl.hasSuccess ? \"has-success\" : \"\")}>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input id=\"email\" type=\"text\" className=\"form-control\" name=\"email\" \r\n                                    required={this.state.employee.contactPreference===\"email\"}\r\n                                    pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"\r\n                                    value={this.state.employee.email} \r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.emailControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Email is required\r\n                                        </span>\r\n                                        : null }\r\n                                    { this.state.emailControl.invalid ? \r\n                                        <span className=\"help-block\">\r\n                                            Email is invalid\r\n                                        </span>\r\n                                        : null }    \r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                                <input id=\"phoneNumber\" type=\"text\" className=\"form-control\" name=\"phoneNumber\"\r\n                                    required={this.state.employee.contactPreference===\"phoneNumber\"}\r\n                                    value={this.state.employee.phoneNumber} \r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.phoneNumberControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Phone Number is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" + (this.state.contactPreferenceControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label>Contact Preference</label>\r\n                                <div className=\"form-control\">\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"contactPreference\" value=\"email\" required \r\n                                        onChange={this.handleRadioChange}\r\n                                        onBlur={this.validate}/>\r\n                                    Email\r\n                                </label>\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"contactPreference\" value=\"phoneNumber\" required onChange={this.handleRadioChange}/>\r\n                                    Phone\r\n                                </label>\r\n                                </div>\r\n                                { this.state.contactPreferenceControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Contact Preference is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" + (this.state.genderControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label>Gender</label>\r\n                                <div className=\"form-control\">\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"male\" required onChange={this.handleRadioChange}/>\r\n                                    Male\r\n                                </label>\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"female\" required onChange={this.handleRadioChange}/>\r\n                                    Female\r\n                                </label>\r\n                                </div>\r\n                                { this.state.genderControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Gender is invalid\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-control\">\r\n                                <label className=\"checkbox-inline\">\r\n                                    <input type=\"checkbox\" name=\"isActive\" required onChange={this.handleCheckboxChange}/>Is Active\r\n                                </label>\r\n                                </div>\r\n                                { this.state.isActiveControl.invalid ? \r\n                                        <span className=\"help-block\">\r\n                                            Is Active is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"department\">Department</label>\r\n                                    <select id=\"department\" name=\"department\" className=\"form-control\" required defaultValue={''}\r\n                                        onChange={this.handleSelectChange}\r\n                                        onBlur={this.validate}>\r\n                                        <option value=\"\" disabled>Select Department</option>\r\n                                        {departments.map(department =>(\r\n                                            <option value={department.id} key={department.id} >{department.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    { this.state.departmentControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Department is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"dateOfBirth\">Date of Birth</label>\r\n                                <DatePicker className=\"form-control\" \r\n                                    id=\"dateOfBirth\" name=\"dateOfBirth\" selected={this.state.employee.dateOfBirth} onChange={this.handleDateChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"photoPath\">Photo Path</label>\r\n                                <input id=\"photoPath\" type=\"text\" className=\"form-control\"\r\n                                    name=\"photoPath\" onChange={this.handlePhotoChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                {/* this path is from the list page, static/media/ */}\r\n                                { this.state.previewPhoto ? <img src={this.state.employee.photoPath} height=\"200\" width=\"200\" alt=\"\"/> : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button type=\"button\" className=\"btn btn-primary\" \r\n                                    onClick={this.handlePhotoToggle}>\r\n                                Show Preview\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.passwordControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label htmlFor =\"password\">Password</label>\r\n                                <input id=\"password\" type=\"text\" className=\"form-control\" name=\"password\" required\r\n                                    value={this.state.employee.password} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.passwordControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Password is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.confirmPasswordControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label htmlFor =\"confirmPassword\">Confirm Password</label>\r\n                                <input id=\"confirmPassword\" type=\"text\" className=\"form-control\" name=\"confirmPassword\" required\r\n                                    value={this.state.employee.confirmPassword} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.confirmPasswordControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Confirm Password is required\r\n                                        </span>\r\n                                        : null }\r\n                                    { this.state.employee.password !== this.state.employee.confirmPassword ? \r\n                                        <span className=\"help-block\">\r\n                                            Password and Confirm Password does not match\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"panel-footer\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\" disabled={this.state.employeeForm.invalid}>Save</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                Generated Model :{JSON.stringify(this.state.employee)}\r\n                <Prompt\r\n                    when={this.state.dirty}\r\n                    message={location => 'Are you sure you want to discard your changes?'}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateEmployee;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Moment from 'moment';\nimport * as employeeService from './service/employee-service';\n\nclass EmployeeDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            employee: employeeService.getEmployee(this.props.match.params.id)\n        }\n    }\n\n    // Everytime this method is called the employee id value is\n    // incremented by 1 and then redirected to the same route\n    // but with a different id parameter value\n    getNextEmployee() {\n        let id = parseInt(this.props.match.params.id);\n        if(id < 3) {\n            id = id + 1;\n        } else {\n            id = 1;\n        }\n        this.props.history.push(`/employees/${id}`);\n        this.setState({\n            employee: employeeService.getEmployee(id.toString())\n        });\n    }\n\n    render() {\n      return (\n        <div className=\"panel panel-primary\">\n                    <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">{this.state.employee.name}</h3>\n                    </div>\n                    <div className=\"panel-body\">\n                    <div className=\"col-xs-10\">\n                \n                        <div className=\"row vertical-align\">\n                \n                        <div className=\"col-xs-4\">\n                            <img className=\"imageClass\" src={employeeService.getImages()[this.state.employee.photoPath]} alt=\"\"/>\n                        </div>\n                        <div className=\"col-xs-8\">\n                \n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Gender\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.gender}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Date of Birth\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {Moment(this.state.employee.dateOfBirth).format('ll')}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Contact Preference\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.contactPreference}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Phone\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.phoneNumber}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Email\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.email}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Department\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.department}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Is Active\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.isActive.toString()}\n                            </div>\n                            </div>\n                \n                        </div>\n                \n                    </div>\n                </div>\n            </div>\n            <div className=\"panel-footer\">\n                <Link className=\"btn btn-primary\" to={`/list/${this.props.match.params.id}`}>Back to List</Link>\n                <button className=\"btn btn-primary pull-right\" onClick={this.getNextEmployee.bind(this)}>\n                    View Next Employee\n                </button>\n            </div>\n        </div> \n      )\n    }\n}\n\nexport default EmployeeDetails;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\n\nimport './App.css';\nimport ListEmployees from './employees/ListEmployees';\nimport CreateEmployee from './employees/CreateEmployee';\nimport EmployeeDetails from './employees/EmployDetails';\nimport * as employeeService from './employees/service/employee-service';\n\nconst employees = employeeService.getEmployees();\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-default\">\n            <ul className=\"nav navbar-nav\">\n              <li>\n                <Link to=\"/list\">List</Link>\n              </li>\n              <li>\n                <Link to=\"/create\">Create</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route exact path=\"/\" component={(props) => <ListEmployees {...props} employees={employees} />} />\n            <Route exact path=\"/create\" component={CreateEmployee} />\n            <Route exact path=\"/list/:id?\" component={(props) => <ListEmployees {...props} employees={employees} />} />\n            <Route exact path=\"/employees/:id\" component={EmployeeDetails}/>\n            <Route component={(props) => <ListEmployees {...props} employees={employees} />} />\n          </Switch>  \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}