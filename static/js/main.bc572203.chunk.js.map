{"version":3,"sources":["assets/images sync nonrecursive //.(png|jpe?g|svg)$","assets/images/john.png","assets/images/mark.png","assets/images/mary.png","employees/DisplayEmployee.js","employees/ListEmployees.js","employees/CreateEmployee.js","App.js","serviceWorker.js","index.js"],"names":["map","./john.png","./mark.png","./mary.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","images","r","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","replace","err","return","importAll","require","DisplayEmployee","react_default","a","createElement","className","onClick","this","props","employee","name","src","photoPath","alt","gender","Moment","dateOfBirth","format","contactPreference","phoneNumber","email","department","isActive","toString","Component","ListEmployees","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","dataFromChild","setState","_this2","employees","employees_DisplayEmployee","key","handleClick","bind","defaultEmployee","fullName","Date","password","confirmPassword","CreateEmployee","assign","previewPhoto","employeeForm","invalid","fullNameControl","touched","hasError","hasSuccess","emailControl","phoneNumberControl","contactPreferenceControl","isActiveControl","genderControl","departmentControl","selectedId","passwordControl","confirmPasswordControl","passwordMatch","dirty","handleChange","assertThisInitialized","handleRadioChange","handleCheckboxChange","handleSelectChange","handleDateChange","handlePhotoChange","handlePhotoToggle","handleSubmit","validate","event","target","handleDynamicRequired","checked","date","prevState","console","log","JSON","stringify","preventDefault","control","concat","type","required","trim","length","defineProperty","handleSaveButton","pattern","RegExp","test","document","getElementById","getElementsByName","enableHasError","controlName","enable","onSubmit","htmlFor","onChange","onBlur","defaultValue","disabled","es","selected","height","width","Prompt","when","message","location","App","BrowserRouter","Link","to","Switch","Route","exact","path","component","employees_ListEmployees","Boolean","window","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc572203.chunk.js","sourcesContent":["var map = {\n\t\"./john.png\": 42,\n\t\"./mark.png\": 43,\n\t\"./mary.png\": 44\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/john.2d9f64bb.png\";","module.exports = __webpack_public_path__ + \"static/media/mark.7d951de6.png\";","module.exports = __webpack_public_path__ + \"static/media/mary.6a8df8e0.png\";","import React, { Component } from 'react';\nimport Moment from 'moment';\nimport './DisplayEmployees.css';\n\nfunction importAll(r) {\n  let images = {};\n  for (var item of r.keys()) {\n    images[item.replace('./', '')] = r(item); \n  }\n  return images;\n}\n\nconst images = importAll(require.context('../assets/images/', false, /\\.(png|jpe?g|svg)$/));\n\nclass DisplayEmployee extends Component {\n    render() {\n      return (\n          <div className=\"panel panel-primary\" onClick={this.props.onClick}>\n            <div className=\"panel-heading\">\n              <h3 className=\"panel-title\">{this.props.employee.name}</h3>\n            </div>\n            <div className=\"panel-body\">\n              <div className=\"col-xs-10\">\n                <div className=\"row vertical-align\">\n                  <div className=\"col-xs-4\">\n                    <img className=\"imageClass\" src={images[this.props.employee.photoPath]} alt=\"\"/>\n                  </div>\n\n                  <div className=\"col-xs-8\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Gender\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.gender}\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Date of Birth\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {Moment(this.props.employee.dateOfBirth).format('ll')}\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Contact Preference\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.contactPreference}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Phone\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.phoneNumber}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Email\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.email}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Department\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.department}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Is Active\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.isActive.toString()}\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n      )\n    }\n}\n\nexport default DisplayEmployee;\n","import React, { Component } from 'react';\r\nimport DisplayEmployee from './DisplayEmployee';\r\n\r\nclass ListEmployees extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state  = {\r\n      dataFromChild: null\r\n    };\r\n  }\r\n\r\n  // tricky parameter\r\n  handleClick(employee) {\r\n    this.setState({\r\n      dataFromChild: employee\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        { \r\n          this.state.dataFromChild ? \r\n            <h1>\r\n              {this.state.dataFromChild.name + ' ' + this.state.dataFromChild.gender}\r\n            </h1>\r\n            : null \r\n          }\r\n      \r\n        {this.props.employees.map(employee =>(  \r\n            <DisplayEmployee key={employee.id} employee={employee} onClick={this.handleClick.bind(this, employee)}/>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListEmployees;\r\n","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { Prompt } from 'react-router-dom';\r\n \r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction importAll(r) {\r\n    let images = {};\r\n    for (var item of r.keys()) {\r\n      images[item.replace('./', '')] = r(item); \r\n    }\r\n    return images;\r\n  }\r\n  \r\nconst images = importAll(require.context('../assets/images/', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nconst defaultEmployee = { \r\n    fullName: '',\r\n    email: '',\r\n    phoneNumber:'',\r\n    contactPreference: '',\r\n    gender: '',\r\n    dateOfBirth: new Date(),\r\n    photoPath: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n};\r\n\r\nclass CreateEmployee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            employee: Object.assign({}, defaultEmployee),\r\n            previewPhoto: false,\r\n            employeeForm : {\r\n                invalid: true\r\n            },\r\n            fullNameControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n            },\r\n            emailControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n                invalid: false\r\n            },\r\n            phoneNumberControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n                invalid: undefined\r\n            },\r\n            contactPreferenceControl: {\r\n                touched: false,\r\n                hasError: true\r\n            },\r\n            isActiveControl: {\r\n                touched: false,\r\n                invalid: true\r\n            },\r\n            genderControl: {\r\n                touched: false,\r\n                hasError: true\r\n            },\r\n            departmentControl: {\r\n                selectedId: null,\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            passwordControl: {\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            confirmPasswordControl: {\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            passwordMatch: true,\r\n            dirty: false\r\n        };\r\n\r\n        this.handleChange          = this.handleChange.bind(this);\r\n        this.handleRadioChange     = this.handleRadioChange.bind(this);\r\n        this.handleCheckboxChange  = this.handleCheckboxChange.bind(this);\r\n        this.handleSelectChange    = this.handleSelectChange.bind(this);\r\n        this.handleDateChange      = this.handleDateChange.bind(this);\r\n        this.handlePhotoChange     = this.handlePhotoChange.bind(this);\r\n        this.handlePhotoToggle     = this.handlePhotoToggle.bind(this);\r\n        this.handleSubmit          = this.handleSubmit.bind(this);\r\n        this.validate              = this.validate.bind(this);\r\n    }\r\n\r\n    // handle the input change\r\n    handleChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.id] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n\r\n    // handle the radio button change\r\n    handleRadioChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n        this.handleDynamicRequired(event);\r\n    }\r\n\r\n    // handle the checkbox change\r\n    handleCheckboxChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.checked;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n\r\n    // handle the select change\r\n    handleSelectChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n    \r\n    // handle the change of date of birth\r\n    handleDateChange(date) {\r\n        let employee = this.state.employee;\r\n        employee.dateOfBirth = date;\r\n        this.setState({employee: employee});\r\n    }\r\n\r\n    // handle the photo change\r\n    handlePhotoChange(event) {\r\n        let employee = this.state.employee;\r\n        employee.photoPath = images[event.target.value];\r\n        this.setState({employee: employee});\r\n    }\r\n\r\n    // handle the photo toogle\r\n    handlePhotoToggle() {\r\n        this.setState(prevState => ({\r\n            previewPhoto: !prevState.previewPhoto\r\n        }));\r\n    }\r\n\r\n    // handle form submit\r\n    handleSubmit(event) {\r\n        console.log(JSON.stringify(this.state.employee));\r\n        event.preventDefault();\r\n    }\r\n\r\n    // handle validation\r\n    validate(event) {\r\n        // fake dirty check\r\n        for (var key in this.state.employee) {\r\n            console.log(key, this.state.employee[key]);\r\n            if(this.state.employee[key] !== defaultEmployee[key]){\r\n                this.setState({dirty: true});\r\n            }\r\n        }\r\n        \r\n        let hasError = false;\r\n        let control = `${event.target.id}Control`;\r\n        if(event.target.type === \"radio\" || event.target.type === \"checkbox\") {\r\n            control = `${event.target.name}Control`;\r\n        }\r\n        // required\r\n        if(event.target.required) {\r\n            if(event.target.value === null || event.target.value.trim().length === 0){\r\n                this.setState({[control]: {\r\n                    touched: true,\r\n                    hasError: true,\r\n                    hasSuccess: false\r\n                }}, function(){\r\n                    this.handleSaveButton();\r\n                });\r\n                hasError = true;\r\n            } else {\r\n                this.setState({[control]: {\r\n                    touched: true,\r\n                    hasError: false,\r\n                    hasSuccess: true\r\n                }}, function(){\r\n                    this.handleSaveButton();\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({[control]: {\r\n                touched: true,\r\n                hasError: false,\r\n                hasSuccess: false\r\n            }}, function(){\r\n                this.handleSaveButton();\r\n            });\r\n        }\r\n\r\n        // pattern match test\r\n        if(event.target.required && event.target.pattern){\r\n            if(RegExp(event.target.pattern).test(event.target.value)){\r\n                this.setState(prevState => ({[control]: {\r\n                    touched: true,\r\n                    invalid: false,\r\n                    hasError: false,\r\n                    hasSuccess: true\r\n                }}));\r\n            } else {\r\n                if(!hasError){\r\n                    // invalid pattern\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: true,\r\n                        hasError: true,\r\n                        hasSuccess: prevState[control].hasSuccess\r\n                    }}));\r\n                    hasError = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // enable/diable the form button\r\n    handleSaveButton() {\r\n        let email = document.getElementById(\"email\");\r\n        let phoneNumber = document.getElementById(\"phoneNumber\");\r\n        let isActive = document.getElementsByName(\"isActive\")[0];\r\n        let department = document.getElementById(\"department\");\r\n        let password = document.getElementById(\"password\");\r\n        let confirmPassword = document.getElementById(\"confirmPassword\");\r\n        if((this.state.fullNameControl.touched && this.state.fullNameControl.hasSuccess) && \r\n            (this.state.contactPreferenceControl.touched && !this.state.contactPreferenceControl.hasError) &&\r\n            ((email.required && this.state.emailControl.touched && this.state.emailControl.hasSuccess && !this.state.emailControl.invalid) || !email.required) && \r\n            ((phoneNumber.required && this.state.phoneNumberControl.touched && this.state.phoneNumberControl.hasSuccess) || !phoneNumber.required) &&\r\n            (this.state.genderControl.touched && this.state.genderControl.hasSuccess) && \r\n            ((isActive.required && !this.state.isActiveControl.invalid) || !isActive.required) &&\r\n            ((department.required && (this.state.departmentControl.touched && !this.state.departmentControl.hasError)) || !department.required) &&\r\n            ((password.required && (this.state.passwordControl.touched && !this.state.passwordControl.hasError)) || !password.required) &&\r\n            ((confirmPassword.required && (this.state.confirmPasswordControl.touched && !this.state.confirmPasswordControl.hasError)) || !confirmPassword.required) &&\r\n            this.state.employee.password === this.state.employee.confirmPassword){\r\n            this.setState({employeeForm : {invalid: false}});\r\n        } else {\r\n            this.setState({employeeForm : {invalid: true}});\r\n        }\r\n    }\r\n\r\n    // handle dynamic required validation\r\n    handleDynamicRequired(event) {\r\n        if(event.target.value === \"email\") {\r\n            this.enableHasError(\"email\", true);\r\n            let email = document.getElementById(\"email\");\r\n            let control = \"emailControl\";\r\n            // pattern match test\r\n            if(this.state.employee.contactPreference===\"email\" && email.pattern){\r\n                if(RegExp(email.pattern).test(email.value)){\r\n                    // valid\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: false,\r\n                        hasError: false,\r\n                        hasSuccess: true\r\n                    }}));\r\n                } else {\r\n                    // invalid pattern\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: true,\r\n                        hasError: true,\r\n                        hasSuccess: false\r\n                    }}));\r\n                }\r\n            }\r\n            this.enableHasError(\"phoneNumber\", false);\r\n        } else if(event.target.value === \"phoneNumber\") {\r\n            this.enableHasError(\"phoneNumber\", true);\r\n            this.enableHasError(\"email\", false);\r\n        }\r\n    }\r\n\r\n    // enable/disabe the hasError property\r\n    enableHasError(controlName, enable) {\r\n        let control = `${controlName}Control`;\r\n        let value = document.getElementById(controlName).value;\r\n        if(enable && (value === null || value.trim().length === 0)){\r\n            this.setState(prevState => ({[control]: {\r\n                hasError: true,\r\n                hasSuccess: false,\r\n            }}), function(){\r\n                this.handleSaveButton();\r\n            });\r\n        } else {\r\n            this.setState(prevState => ({[control]: {\r\n                hasError: false,\r\n                hasSuccess: false\r\n            }}), function(){\r\n                this.handleSaveButton();\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let departments = [\r\n            { id: 1, name: 'Help Desk' },\r\n            { id: 2, name: 'HR' },\r\n            { id: 3, name: 'IT' },\r\n            { id: 4, name: 'Payroll' }\r\n        ];\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"panel panel-primary\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">Create Employee</h3>\r\n                        </div>\r\n                        <div className=\"panel-body\">\r\n                            <div className={\"form-group \" \r\n                                + (this.state.fullNameControl.hasError ? \"has-error\" : \"\") \r\n                                + (this.state.fullNameControl.hasSuccess ? \"has-success\" : \"\")}>\r\n                                <label htmlFor =\"fullName\">Full Name</label>\r\n                                <input id=\"fullName\" type=\"text\" className=\"form-control\" name=\"fullName\" required\r\n                                    value={this.state.employee.fullName} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.fullNameControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Full Name is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.emailControl.hasError ? \"has-error\" : \"\") \r\n                                + (this.state.emailControl.hasSuccess ? \"has-success\" : \"\")}>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input id=\"email\" type=\"text\" className=\"form-control\" name=\"email\" \r\n                                    required={this.state.employee.contactPreference===\"email\"}\r\n                                    pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"\r\n                                    value={this.state.employee.email} \r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.emailControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Email is required\r\n                                        </span>\r\n                                        : null }\r\n                                    { this.state.emailControl.invalid ? \r\n                                        <span className=\"help-block\">\r\n                                            Email is invalid\r\n                                        </span>\r\n                                        : null }    \r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                                <input id=\"phoneNumber\" type=\"text\" className=\"form-control\" name=\"phoneNumber\"\r\n                                    required={this.state.employee.contactPreference===\"phoneNumber\"}\r\n                                    value={this.state.employee.phoneNumber} \r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.phoneNumberControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Phone Number is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" + (this.state.contactPreferenceControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label>Contact Preference</label>\r\n                                <div className=\"form-control\">\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"contactPreference\" value=\"email\" required \r\n                                        onChange={this.handleRadioChange}\r\n                                        onBlur={this.validate}/>\r\n                                    Email\r\n                                </label>\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"contactPreference\" value=\"phoneNumber\" required onChange={this.handleRadioChange}/>\r\n                                    Phone\r\n                                </label>\r\n                                </div>\r\n                                { this.state.contactPreferenceControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Contact Preference is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" + (this.state.genderControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label>Gender</label>\r\n                                <div className=\"form-control\">\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"male\" required onChange={this.handleRadioChange}/>\r\n                                    Male\r\n                                </label>\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"female\" required onChange={this.handleRadioChange}/>\r\n                                    Female\r\n                                </label>\r\n                                </div>\r\n                                { this.state.genderControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Gender is invalid\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-control\">\r\n                                <label className=\"checkbox-inline\">\r\n                                    <input type=\"checkbox\" name=\"isActive\" required onChange={this.handleCheckboxChange}/>Is Active\r\n                                </label>\r\n                                </div>\r\n                                { this.state.isActiveControl.invalid ? \r\n                                        <span className=\"help-block\">\r\n                                            Is Active is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"department\">Department</label>\r\n                                    <select id=\"department\" name=\"department\" className=\"form-control\" required defaultValue={''}\r\n                                        onChange={this.handleSelectChange}\r\n                                        onBlur={this.validate}>\r\n                                        <option value=\"\" disabled>Select Department</option>\r\n                                        {departments.map(department =>(\r\n                                            <option value={department.id} key={department.id} >{department.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    { this.state.departmentControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Department is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"dateOfBirth\">Date of Birth</label>\r\n                                <DatePicker className=\"form-control\" \r\n                                    id=\"dateOfBirth\" name=\"dateOfBirth\" selected={this.state.employee.dateOfBirth} onChange={this.handleDateChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"photoPath\">Photo Path</label>\r\n                                <input id=\"photoPath\" type=\"text\" className=\"form-control\"\r\n                                    name=\"photoPath\" onChange={this.handlePhotoChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                {/* this path is from the list page, static/media/ */}\r\n                                { this.state.previewPhoto ? <img src={this.state.employee.photoPath} height=\"200\" width=\"200\" alt=\"\"/> : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button type=\"button\" className=\"btn btn-primary\" \r\n                                    onClick={this.handlePhotoToggle}>\r\n                                Show Preview\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.passwordControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label htmlFor =\"password\">Password</label>\r\n                                <input id=\"password\" type=\"text\" className=\"form-control\" name=\"password\" required\r\n                                    value={this.state.employee.password} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.passwordControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Password is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.confirmPasswordControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label htmlFor =\"confirmPassword\">Confirm Password</label>\r\n                                <input id=\"confirmPassword\" type=\"text\" className=\"form-control\" name=\"confirmPassword\" required\r\n                                    value={this.state.employee.confirmPassword} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.confirmPasswordControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Confirm Password is required\r\n                                        </span>\r\n                                        : null }\r\n                                    { this.state.employee.password !== this.state.employee.confirmPassword ? \r\n                                        <span className=\"help-block\">\r\n                                            Password and Confirm Password does not match\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"panel-footer\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\" disabled={this.state.employeeForm.invalid}>Save</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                Generated Model :{JSON.stringify(this.state.employee)}\r\n                <Prompt\r\n                    when={this.state.dirty}\r\n                    message={location => 'Are you sure you want to discard your changes?'}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateEmployee;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\n\nimport './App.css';\nimport ListEmployees from './employees/ListEmployees';\nimport CreateEmployee from './employees/CreateEmployee';\n\nconst employees = [\n  {\n    id: 1,\n    name: 'Mark',\n    gender: 'Male',\n    contactPreference: 'Email',\n    email: 'mark@pragimtech.com',\n    dateOfBirth: new Date('10/25/1988'),\n    department: 'IT',\n    isActive: true,\n    photoPath: 'mark.png'\n  },\n  {\n    id: 2,\n    name: 'Mary',\n    gender: 'Female',\n    contactPreference: 'Phone',\n    phoneNumber: 2345978640,\n    dateOfBirth: new Date('11/20/1979'),\n    department: 'HR',\n    isActive: true,\n    photoPath: 'mary.png'\n  },\n  {\n    id: 3,\n    name: 'John',\n    gender: 'Male',\n    contactPreference: 'Phone',\n    phoneNumber: 5432978640,\n    dateOfBirth: new Date('3/25/1976'),\n    department: 'IT',\n    isActive: false,\n    photoPath: 'john.png'\n  }]\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-default\">\n            <ul className=\"nav navbar-nav\">\n              <li>\n                <Link to=\"/list\">List</Link>\n              </li>\n              <li>\n                <Link to=\"/create\">Create</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route exact path=\"/\" component={(props) => <ListEmployees {...props} employees={employees} />} />\n            <Route exact path=\"/create\" component={CreateEmployee} />\n            <Route exact path=\"/list\" component={(props) => <ListEmployees {...props} employees={employees} />} />\n            <Route component={(props) => <ListEmployees {...props} employees={employees} />} />\n          </Switch>  \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}