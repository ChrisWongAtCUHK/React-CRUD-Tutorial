{"version":3,"sources":["assets/images sync nonrecursive //.(png|jpe?g|svg)$","assets/images/john.png","assets/images/mark.png","assets/images/mary.png","employees/service/employee-service.js","employees/DisplayEmployee.js","employees/ListEmployees.js","employees/CreateEmployee.js","employees/EmployDetails.js","App.js","serviceWorker.js","index.js"],"names":["map","./john.png","./mark.png","./mary.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","listEmployees","name","gender","contactPreference","email","dateOfBirth","Date","department","isActive","photoPath","phoneNumber","getImages","r","images","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","replace","err","return","importAll","require","DisplayEmployee","react_default","a","createElement","className","onClick","this","props","employee","src","employeeService","alt","Moment","format","toString","Component","ListEmployees","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","dataFromChild","setState","history","push","concat","_this2","employees","employees_DisplayEmployee","key","handleClick","bind","defaultEmployee","fullName","password","confirmPassword","CreateEmployee","assign","previewPhoto","employeeForm","invalid","fullNameControl","touched","hasError","hasSuccess","emailControl","phoneNumberControl","contactPreferenceControl","isActiveControl","genderControl","departmentControl","selectedId","passwordControl","confirmPasswordControl","passwordMatch","dirty","handleChange","assertThisInitialized","handleRadioChange","handleCheckboxChange","handleSelectChange","handleDateChange","handlePhotoChange","handlePhotoToggle","handleSubmit","validate","event","target","handleDynamicRequired","checked","date","prevState","console","log","JSON","stringify","preventDefault","control","type","required","trim","length","defineProperty","handleSaveButton","pattern","RegExp","test","document","getElementById","getElementsByName","enableHasError","controlName","enable","onSubmit","htmlFor","onChange","onBlur","defaultValue","disabled","es","selected","height","width","Prompt","when","message","location","EmployeeDetails","match","params","find","class","Link","to","App","BrowserRouter","Switch","Route","exact","path","component","employees_ListEmployees","Boolean","window","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2291d962.chunk.js","sourcesContent":["var map = {\n\t\"./john.png\": 42,\n\t\"./mark.png\": 43,\n\t\"./mary.png\": 44\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25;","module.exports = __webpack_public_path__ + \"static/media/john.2d9f64bb.png\";","module.exports = __webpack_public_path__ + \"static/media/mark.7d951de6.png\";","module.exports = __webpack_public_path__ + \"static/media/mary.6a8df8e0.png\";","const listEmployees = [\n    {\n      id: 1,\n      name: 'Mark',\n      gender: 'Male',\n      contactPreference: 'Email',\n      email: 'mark@pragimtech.com',\n      dateOfBirth: new Date('10/25/1988'),\n      department: 'IT',\n      isActive: true,\n      photoPath: 'mark.png'\n    },\n    {\n      id: 2,\n      name: 'Mary',\n      gender: 'Female',\n      contactPreference: 'Phone',\n      phoneNumber: 2345978640,\n      dateOfBirth: new Date('11/20/1979'),\n      department: 'HR',\n      isActive: true,\n      photoPath: 'mary.png'\n    },\n    {\n      id: 3,\n      name: 'John',\n      gender: 'Male',\n      contactPreference: 'Phone',\n      phoneNumber: 5432978640,\n      dateOfBirth: new Date('3/25/1976'),\n      department: 'IT',\n      isActive: false,\n      photoPath: 'john.png'\n    }]\n\nexport function getEmployees() {\n    return listEmployees;\n};\n\nexport function getEmployee(id) {\n    return listEmployees.find(e => e.id.toString() === id);\n};\n\nfunction importAll(r) {\n    let images = {};\n    for (var item of r.keys()) {\n      images[item.replace('./', '')] = r(item); \n    }\n    return images;\n  }\n  \nexport function getImages() {\n    return importAll(require.context('../../assets/images/', false, /\\.(png|jpe?g|svg)$/));\n}\n  ","import React, { Component } from 'react';\nimport Moment from 'moment';\nimport './DisplayEmployees.css';\nimport * as employeeService from './service/employee-service';\n\n\nclass DisplayEmployee extends Component {\n    render() {\n      return (\n          <div className=\"panel panel-primary pointerCursor\" onClick={this.props.onClick}>\n            <div className=\"panel-heading\">\n              <h3 className=\"panel-title\">{this.props.employee.name}</h3>\n            </div>\n            <div className=\"panel-body\">\n              <div className=\"col-xs-10\">\n                <div className=\"row vertical-align\">\n                  <div className=\"col-xs-4\">\n                    <img className=\"imageClass\" src={employeeService.getImages()[this.props.employee.photoPath]} alt=\"\"/>\n                  </div>\n\n                  <div className=\"col-xs-8\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Gender\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.gender}\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Date of Birth\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {Moment(this.props.employee.dateOfBirth).format('ll')}\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Contact Preference\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.contactPreference}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Phone\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.phoneNumber}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Email\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.email}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Department\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.department}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-6\">\n                        Is Active\n                      </div>\n                      <div className=\"col-xs-6\">\n                        : {this.props.employee.isActive.toString()}\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n      )\n    }\n}\n\nexport default DisplayEmployee;\n","import React, { Component } from 'react';\r\nimport DisplayEmployee from './DisplayEmployee';\r\n\r\nclass ListEmployees extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state  = {\r\n      dataFromChild: null\r\n    };\r\n  }\r\n\r\n  // tricky parameter\r\n  handleClick(employee) {\r\n    this.setState({\r\n      dataFromChild: employee\r\n    });\r\n    this.props.history.push(`/employees/${employee.id}`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.employees.map(employee =>(  \r\n            <DisplayEmployee key={employee.id} employee={employee} onClick={this.handleClick.bind(this, employee)}/>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListEmployees;\r\n","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { Prompt } from 'react-router-dom';\r\n \r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction importAll(r) {\r\n    let images = {};\r\n    for (var item of r.keys()) {\r\n      images[item.replace('./', '')] = r(item); \r\n    }\r\n    return images;\r\n  }\r\n  \r\nconst images = importAll(require.context('../assets/images/', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nconst defaultEmployee = { \r\n    fullName: '',\r\n    email: '',\r\n    phoneNumber:'',\r\n    contactPreference: '',\r\n    gender: '',\r\n    dateOfBirth: new Date(),\r\n    photoPath: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n};\r\n\r\nclass CreateEmployee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            employee: Object.assign({}, defaultEmployee),\r\n            previewPhoto: false,\r\n            employeeForm : {\r\n                invalid: true\r\n            },\r\n            fullNameControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n            },\r\n            emailControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n                invalid: false\r\n            },\r\n            phoneNumberControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n                invalid: undefined\r\n            },\r\n            contactPreferenceControl: {\r\n                touched: false,\r\n                hasError: true\r\n            },\r\n            isActiveControl: {\r\n                touched: false,\r\n                invalid: true\r\n            },\r\n            genderControl: {\r\n                touched: false,\r\n                hasError: true\r\n            },\r\n            departmentControl: {\r\n                selectedId: null,\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            passwordControl: {\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            confirmPasswordControl: {\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            passwordMatch: true,\r\n            dirty: false\r\n        };\r\n\r\n        this.handleChange          = this.handleChange.bind(this);\r\n        this.handleRadioChange     = this.handleRadioChange.bind(this);\r\n        this.handleCheckboxChange  = this.handleCheckboxChange.bind(this);\r\n        this.handleSelectChange    = this.handleSelectChange.bind(this);\r\n        this.handleDateChange      = this.handleDateChange.bind(this);\r\n        this.handlePhotoChange     = this.handlePhotoChange.bind(this);\r\n        this.handlePhotoToggle     = this.handlePhotoToggle.bind(this);\r\n        this.handleSubmit          = this.handleSubmit.bind(this);\r\n        this.validate              = this.validate.bind(this);\r\n    }\r\n\r\n    // handle the input change\r\n    handleChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.id] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n\r\n    // handle the radio button change\r\n    handleRadioChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n        this.handleDynamicRequired(event);\r\n    }\r\n\r\n    // handle the checkbox change\r\n    handleCheckboxChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.checked;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n\r\n    // handle the select change\r\n    handleSelectChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n    \r\n    // handle the change of date of birth\r\n    handleDateChange(date) {\r\n        let employee = this.state.employee;\r\n        employee.dateOfBirth = date;\r\n        this.setState({employee: employee});\r\n    }\r\n\r\n    // handle the photo change\r\n    handlePhotoChange(event) {\r\n        let employee = this.state.employee;\r\n        employee.photoPath = images[event.target.value];\r\n        this.setState({employee: employee});\r\n    }\r\n\r\n    // handle the photo toogle\r\n    handlePhotoToggle() {\r\n        this.setState(prevState => ({\r\n            previewPhoto: !prevState.previewPhoto\r\n        }));\r\n    }\r\n\r\n    // handle form submit\r\n    handleSubmit(event) {\r\n        console.log(JSON.stringify(this.state.employee));\r\n        event.preventDefault();\r\n    }\r\n\r\n    // handle validation\r\n    validate(event) {\r\n        // fake dirty check\r\n        for (var key in this.state.employee) {\r\n            console.log(key, this.state.employee[key]);\r\n            if(this.state.employee[key] !== defaultEmployee[key]){\r\n                this.setState({dirty: true});\r\n            }\r\n        }\r\n        \r\n        let hasError = false;\r\n        let control = `${event.target.id}Control`;\r\n        if(event.target.type === \"radio\" || event.target.type === \"checkbox\") {\r\n            control = `${event.target.name}Control`;\r\n        }\r\n        // required\r\n        if(event.target.required) {\r\n            if(event.target.value === null || event.target.value.trim().length === 0){\r\n                this.setState({[control]: {\r\n                    touched: true,\r\n                    hasError: true,\r\n                    hasSuccess: false\r\n                }}, function(){\r\n                    this.handleSaveButton();\r\n                });\r\n                hasError = true;\r\n            } else {\r\n                this.setState({[control]: {\r\n                    touched: true,\r\n                    hasError: false,\r\n                    hasSuccess: true\r\n                }}, function(){\r\n                    this.handleSaveButton();\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({[control]: {\r\n                touched: true,\r\n                hasError: false,\r\n                hasSuccess: false\r\n            }}, function(){\r\n                this.handleSaveButton();\r\n            });\r\n        }\r\n\r\n        // pattern match test\r\n        if(event.target.required && event.target.pattern){\r\n            if(RegExp(event.target.pattern).test(event.target.value)){\r\n                this.setState(prevState => ({[control]: {\r\n                    touched: true,\r\n                    invalid: false,\r\n                    hasError: false,\r\n                    hasSuccess: true\r\n                }}));\r\n            } else {\r\n                if(!hasError){\r\n                    // invalid pattern\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: true,\r\n                        hasError: true,\r\n                        hasSuccess: prevState[control].hasSuccess\r\n                    }}));\r\n                    hasError = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // enable/diable the form button\r\n    handleSaveButton() {\r\n        let email = document.getElementById(\"email\");\r\n        let phoneNumber = document.getElementById(\"phoneNumber\");\r\n        let isActive = document.getElementsByName(\"isActive\")[0];\r\n        let department = document.getElementById(\"department\");\r\n        let password = document.getElementById(\"password\");\r\n        let confirmPassword = document.getElementById(\"confirmPassword\");\r\n        if((this.state.fullNameControl.touched && this.state.fullNameControl.hasSuccess) && \r\n            (this.state.contactPreferenceControl.touched && !this.state.contactPreferenceControl.hasError) &&\r\n            ((email.required && this.state.emailControl.touched && this.state.emailControl.hasSuccess && !this.state.emailControl.invalid) || !email.required) && \r\n            ((phoneNumber.required && this.state.phoneNumberControl.touched && this.state.phoneNumberControl.hasSuccess) || !phoneNumber.required) &&\r\n            (this.state.genderControl.touched && this.state.genderControl.hasSuccess) && \r\n            ((isActive.required && !this.state.isActiveControl.invalid) || !isActive.required) &&\r\n            ((department.required && (this.state.departmentControl.touched && !this.state.departmentControl.hasError)) || !department.required) &&\r\n            ((password.required && (this.state.passwordControl.touched && !this.state.passwordControl.hasError)) || !password.required) &&\r\n            ((confirmPassword.required && (this.state.confirmPasswordControl.touched && !this.state.confirmPasswordControl.hasError)) || !confirmPassword.required) &&\r\n            this.state.employee.password === this.state.employee.confirmPassword){\r\n            this.setState({employeeForm : {invalid: false}});\r\n        } else {\r\n            this.setState({employeeForm : {invalid: true}});\r\n        }\r\n    }\r\n\r\n    // handle dynamic required validation\r\n    handleDynamicRequired(event) {\r\n        if(event.target.value === \"email\") {\r\n            this.enableHasError(\"email\", true);\r\n            let email = document.getElementById(\"email\");\r\n            let control = \"emailControl\";\r\n            // pattern match test\r\n            if(this.state.employee.contactPreference===\"email\" && email.pattern){\r\n                if(RegExp(email.pattern).test(email.value)){\r\n                    // valid\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: false,\r\n                        hasError: false,\r\n                        hasSuccess: true\r\n                    }}));\r\n                } else {\r\n                    // invalid pattern\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: true,\r\n                        hasError: true,\r\n                        hasSuccess: false\r\n                    }}));\r\n                }\r\n            }\r\n            this.enableHasError(\"phoneNumber\", false);\r\n        } else if(event.target.value === \"phoneNumber\") {\r\n            this.enableHasError(\"phoneNumber\", true);\r\n            this.enableHasError(\"email\", false);\r\n        }\r\n    }\r\n\r\n    // enable/disabe the hasError property\r\n    enableHasError(controlName, enable) {\r\n        let control = `${controlName}Control`;\r\n        let value = document.getElementById(controlName).value;\r\n        if(enable && (value === null || value.trim().length === 0)){\r\n            this.setState(prevState => ({[control]: {\r\n                hasError: true,\r\n                hasSuccess: false,\r\n            }}), function(){\r\n                this.handleSaveButton();\r\n            });\r\n        } else {\r\n            this.setState(prevState => ({[control]: {\r\n                hasError: false,\r\n                hasSuccess: false\r\n            }}), function(){\r\n                this.handleSaveButton();\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let departments = [\r\n            { id: 1, name: 'Help Desk' },\r\n            { id: 2, name: 'HR' },\r\n            { id: 3, name: 'IT' },\r\n            { id: 4, name: 'Payroll' }\r\n        ];\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"panel panel-primary\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">Create Employee</h3>\r\n                        </div>\r\n                        <div className=\"panel-body\">\r\n                            <div className={\"form-group \" \r\n                                + (this.state.fullNameControl.hasError ? \"has-error\" : \"\") \r\n                                + (this.state.fullNameControl.hasSuccess ? \"has-success\" : \"\")}>\r\n                                <label htmlFor =\"fullName\">Full Name</label>\r\n                                <input id=\"fullName\" type=\"text\" className=\"form-control\" name=\"fullName\" required\r\n                                    value={this.state.employee.fullName} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.fullNameControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Full Name is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.emailControl.hasError ? \"has-error\" : \"\") \r\n                                + (this.state.emailControl.hasSuccess ? \"has-success\" : \"\")}>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input id=\"email\" type=\"text\" className=\"form-control\" name=\"email\" \r\n                                    required={this.state.employee.contactPreference===\"email\"}\r\n                                    pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"\r\n                                    value={this.state.employee.email} \r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.emailControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Email is required\r\n                                        </span>\r\n                                        : null }\r\n                                    { this.state.emailControl.invalid ? \r\n                                        <span className=\"help-block\">\r\n                                            Email is invalid\r\n                                        </span>\r\n                                        : null }    \r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                                <input id=\"phoneNumber\" type=\"text\" className=\"form-control\" name=\"phoneNumber\"\r\n                                    required={this.state.employee.contactPreference===\"phoneNumber\"}\r\n                                    value={this.state.employee.phoneNumber} \r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.phoneNumberControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Phone Number is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" + (this.state.contactPreferenceControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label>Contact Preference</label>\r\n                                <div className=\"form-control\">\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"contactPreference\" value=\"email\" required \r\n                                        onChange={this.handleRadioChange}\r\n                                        onBlur={this.validate}/>\r\n                                    Email\r\n                                </label>\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"contactPreference\" value=\"phoneNumber\" required onChange={this.handleRadioChange}/>\r\n                                    Phone\r\n                                </label>\r\n                                </div>\r\n                                { this.state.contactPreferenceControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Contact Preference is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" + (this.state.genderControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label>Gender</label>\r\n                                <div className=\"form-control\">\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"male\" required onChange={this.handleRadioChange}/>\r\n                                    Male\r\n                                </label>\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"female\" required onChange={this.handleRadioChange}/>\r\n                                    Female\r\n                                </label>\r\n                                </div>\r\n                                { this.state.genderControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Gender is invalid\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-control\">\r\n                                <label className=\"checkbox-inline\">\r\n                                    <input type=\"checkbox\" name=\"isActive\" required onChange={this.handleCheckboxChange}/>Is Active\r\n                                </label>\r\n                                </div>\r\n                                { this.state.isActiveControl.invalid ? \r\n                                        <span className=\"help-block\">\r\n                                            Is Active is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"department\">Department</label>\r\n                                    <select id=\"department\" name=\"department\" className=\"form-control\" required defaultValue={''}\r\n                                        onChange={this.handleSelectChange}\r\n                                        onBlur={this.validate}>\r\n                                        <option value=\"\" disabled>Select Department</option>\r\n                                        {departments.map(department =>(\r\n                                            <option value={department.id} key={department.id} >{department.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    { this.state.departmentControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Department is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"dateOfBirth\">Date of Birth</label>\r\n                                <DatePicker className=\"form-control\" \r\n                                    id=\"dateOfBirth\" name=\"dateOfBirth\" selected={this.state.employee.dateOfBirth} onChange={this.handleDateChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"photoPath\">Photo Path</label>\r\n                                <input id=\"photoPath\" type=\"text\" className=\"form-control\"\r\n                                    name=\"photoPath\" onChange={this.handlePhotoChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                {/* this path is from the list page, static/media/ */}\r\n                                { this.state.previewPhoto ? <img src={this.state.employee.photoPath} height=\"200\" width=\"200\" alt=\"\"/> : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button type=\"button\" className=\"btn btn-primary\" \r\n                                    onClick={this.handlePhotoToggle}>\r\n                                Show Preview\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.passwordControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label htmlFor =\"password\">Password</label>\r\n                                <input id=\"password\" type=\"text\" className=\"form-control\" name=\"password\" required\r\n                                    value={this.state.employee.password} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.passwordControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Password is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.confirmPasswordControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label htmlFor =\"confirmPassword\">Confirm Password</label>\r\n                                <input id=\"confirmPassword\" type=\"text\" className=\"form-control\" name=\"confirmPassword\" required\r\n                                    value={this.state.employee.confirmPassword} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.confirmPasswordControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Confirm Password is required\r\n                                        </span>\r\n                                        : null }\r\n                                    { this.state.employee.password !== this.state.employee.confirmPassword ? \r\n                                        <span className=\"help-block\">\r\n                                            Password and Confirm Password does not match\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"panel-footer\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\" disabled={this.state.employeeForm.invalid}>Save</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                Generated Model :{JSON.stringify(this.state.employee)}\r\n                <Prompt\r\n                    when={this.state.dirty}\r\n                    message={location => 'Are you sure you want to discard your changes?'}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateEmployee;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Moment from 'moment';\nimport * as employeeService from './service/employee-service';\n\nclass EmployeeDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            employee: employeeService.getEmployee(this.props.match.params.id)\n        }\n    }\n    render() {\n      return (\n        <div className=\"panel panel-primary\">\n                    <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">{this.state.employee.name}</h3>\n                    </div>\n                    <div className=\"panel-body\">\n                    <div className=\"col-xs-10\">\n                \n                        <div className=\"row vertical-align\">\n                \n                        <div className=\"col-xs-4\">\n                            <img className=\"imageClass\" src={employeeService.getImages()[this.state.employee.photoPath]} alt=\"\"/>\n                        </div>\n                        <div className=\"col-xs-8\">\n                \n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Gender\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.gender}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Date of Birth\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {Moment(this.state.employee.dateOfBirth).format('ll')}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Contact Preference\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.contactPreference}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Phone\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.phoneNumber}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Email\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.email}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Department\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.department}\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                                Is Active\n                            </div>\n                            <div className=\"col-xs-6\">\n                                : {this.state.employee.isActive.toString()}\n                            </div>\n                            </div>\n                \n                        </div>\n                \n                    </div>\n                </div>\n            </div>\n            <div class=\"panel-footer\">\n                <Link className=\"btn btn-primary\" to=\"/list\">Back to List</Link>\n            </div>\n        </div> \n      )\n    }\n}\n\nexport default EmployeeDetails;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\n\nimport './App.css';\nimport ListEmployees from './employees/ListEmployees';\nimport CreateEmployee from './employees/CreateEmployee';\nimport EmployeeDetails from './employees/EmployDetails';\nimport * as employeeService from './employees/service/employee-service';\n\nconst employees = employeeService.getEmployees();\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-default\">\n            <ul className=\"nav navbar-nav\">\n              <li>\n                <Link to=\"/list\">List</Link>\n              </li>\n              <li>\n                <Link to=\"/create\">Create</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route exact path=\"/\" component={(props) => <ListEmployees {...props} employees={employees} />} />\n            <Route exact path=\"/create\" component={CreateEmployee} />\n            <Route exact path=\"/list\" component={(props) => <ListEmployees {...props} employees={employees} />} />\n            <Route exact path=\"/employees/:id\" component={EmployeeDetails}/>\n            <Route component={(props) => <ListEmployees {...props} employees={employees} />} />\n          </Switch>  \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}