{"version":3,"sources":["assets/images sync nonrecursive //.(png|jpe?g|svg)$","assets/images/john.png","assets/images/mark.png","assets/images/mary.png","employees/ListEmployees.js","employees/CreateEmployee.js","App.js","serviceWorker.js","index.js"],"names":["map","./john.png","./mark.png","./mary.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","images","r","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","replace","err","return","importAll","require","ListEmployees","react_default","a","createElement","this","props","employees","employee","className","key","name","src","photoPath","alt","gender","Moment","dateOfBirth","format","contactPreference","phoneNumber","email","department","isActive","toString","Component","CreateEmployee","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","fullName","Date","password","confirmPassword","previewPhoto","employeeForm","invalid","fullNameControl","touched","hasError","hasSuccess","emailControl","phoneNumberControl","contactPreferenceControl","isActiveControl","genderControl","departmentControl","selectedId","passwordControl","confirmPasswordControl","passwordMatch","handleChange","bind","assertThisInitialized","handleRadioChange","handleCheckboxChange","handleSelectChange","handleDateChange","handlePhotoChange","handlePhotoToggle","handleSubmit","validate","event","target","setState","handleDynamicRequired","checked","date","prevState","console","log","JSON","stringify","preventDefault","control","concat","type","required","trim","length","defineProperty","handleSaveButton","pattern","RegExp","test","document","getElementById","getElementsByName","enableHasError","controlName","enable","onSubmit","htmlFor","onChange","onBlur","defaultValue","disabled","es","selected","height","width","onClick","App","BrowserRouter","Link","to","Switch","Route","exact","path","component","src_employees_ListEmployees","assign","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.351799cc.chunk.js","sourcesContent":["var map = {\n\t\"./john.png\": 41,\n\t\"./mark.png\": 42,\n\t\"./mary.png\": 43\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/john.2d9f64bb.png\";","module.exports = __webpack_public_path__ + \"static/media/mark.7d951de6.png\";","module.exports = __webpack_public_path__ + \"static/media/mary.6a8df8e0.png\";","import React, { Component } from 'react';\r\nimport Moment from 'moment';\r\nimport './ListEmployees.css';\r\n\r\nfunction importAll(r) {\r\n  let images = {};\r\n  for (var item of r.keys()) {\r\n    images[item.replace('./', '')] = r(item); \r\n  }\r\n  return images;\r\n}\r\n\r\nconst images = importAll(require.context('../assets/images/', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nclass ListEmployees extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.employees.map(employee =>(\r\n          <div className=\"panel panel-primary\" key={employee.id}>\r\n            <div className=\"panel-heading\">\r\n              <h3 className=\"panel-title\">{employee.name}</h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n              <div className=\"col-xs-10\">\r\n                <div className=\"row vertical-align\">\r\n                  <div className=\"col-xs-4\">\r\n                    <img className=\"imageClass\" src={images[employee.photoPath]} alt=\"\"/>\r\n                  </div>\r\n\r\n                  <div className=\"col-xs-8\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Gender\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.gender}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Date of Birth\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {Moment(employee.dateOfBirth).format('ll')}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Contact Preference\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.contactPreference}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Phone\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.phoneNumber}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Email\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.email}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Department\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.department}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Is Active\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.isActive.toString()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListEmployees;\r\n","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\n \r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction importAll(r) {\r\n    let images = {};\r\n    for (var item of r.keys()) {\r\n      images[item.replace('./', '')] = r(item); \r\n    }\r\n    return images;\r\n  }\r\n  \r\nconst images = importAll(require.context('../assets/images/', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nclass CreateEmployee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = { \r\n            employee: { \r\n                fullName: '',\r\n                email: '',\r\n                phoneNumber:'',\r\n                contactPreference: '',\r\n                gender: '',\r\n                dateOfBirth: new Date(),\r\n                photoPath: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n            },\r\n            previewPhoto: false,\r\n            employeeForm : {\r\n                invalid: true\r\n            },\r\n            fullNameControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n            },\r\n            emailControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n                invalid: false\r\n            },\r\n            phoneNumberControl: {\r\n                touched: false,\r\n                hasError: false,\r\n                hasSuccess: false,\r\n                invalid: undefined\r\n            },\r\n            contactPreferenceControl: {\r\n                touched: false,\r\n                hasError: true\r\n            },\r\n            isActiveControl: {\r\n                touched: false,\r\n                invalid: true\r\n            },\r\n            genderControl: {\r\n                touched: false,\r\n                hasError: true\r\n            },\r\n            departmentControl: {\r\n                selectedId: null,\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            passwordControl: {\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            confirmPasswordControl: {\r\n                touched: false,\r\n                hasError: false\r\n            },\r\n            passwordMatch: true\r\n        };\r\n\r\n        this.handleChange          = this.handleChange.bind(this);\r\n        this.handleRadioChange     = this.handleRadioChange.bind(this);\r\n        this.handleCheckboxChange  = this.handleCheckboxChange.bind(this);\r\n        this.handleSelectChange    = this.handleSelectChange.bind(this);\r\n        this.handleDateChange      = this.handleDateChange.bind(this);\r\n        this.handlePhotoChange     = this.handlePhotoChange.bind(this);\r\n        this.handlePhotoToggle     = this.handlePhotoToggle.bind(this);\r\n        this.handleSubmit          = this.handleSubmit.bind(this);\r\n        this.validate              = this.validate.bind(this);\r\n    }\r\n\r\n    // handle the input change\r\n    handleChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.id] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n\r\n    // handle the radio button change\r\n    handleRadioChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n        this.handleDynamicRequired(event);\r\n    }\r\n\r\n    // handle the checkbox change\r\n    handleCheckboxChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.checked;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n\r\n    // handle the select change\r\n    handleSelectChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.value;\r\n        this.setState({employee: employee});\r\n        this.validate(event);\r\n    }\r\n    \r\n    // handle the change of date of birth\r\n    handleDateChange(date) {\r\n        let employee = this.state.employee;\r\n        employee.dateOfBirth = date;\r\n        this.setState({employee: employee});\r\n    }\r\n\r\n    // handle the photo change\r\n    handlePhotoChange(event) {\r\n        let employee = this.state.employee;\r\n        employee.photoPath = images[event.target.value];\r\n        this.setState({employee: employee});\r\n    }\r\n\r\n    // handle the photo toogle\r\n    handlePhotoToggle() {\r\n        this.setState(prevState => ({\r\n            previewPhoto: !prevState.previewPhoto\r\n        }));\r\n    }\r\n\r\n    // handle form submit\r\n    handleSubmit(event) {\r\n        console.log(JSON.stringify(this.state.employee));\r\n        event.preventDefault();\r\n    }\r\n\r\n    // handle validation\r\n    validate(event) {\r\n        let hasError = false;\r\n        let control = `${event.target.id}Control`;\r\n        if(event.target.type === \"radio\" || event.target.type === \"checkbox\") {\r\n            control = `${event.target.name}Control`;\r\n        }\r\n        // required\r\n        if(event.target.required) {\r\n            if(event.target.value === null || event.target.value.trim().length === 0){\r\n                this.setState({[control]: {\r\n                    touched: true,\r\n                    hasError: true,\r\n                    hasSuccess: false\r\n                }}, function(){\r\n                    this.handleSaveButton();\r\n                });\r\n                hasError = true;\r\n            } else {\r\n                this.setState({[control]: {\r\n                    touched: true,\r\n                    hasError: false,\r\n                    hasSuccess: true\r\n                }}, function(){\r\n                    this.handleSaveButton();\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({[control]: {\r\n                touched: true,\r\n                hasError: false,\r\n                hasSuccess: false\r\n            }}, function(){\r\n                this.handleSaveButton();\r\n            });\r\n        }\r\n\r\n        // pattern match test\r\n        if(event.target.required && event.target.pattern){\r\n            if(RegExp(event.target.pattern).test(event.target.value)){\r\n                this.setState(prevState => ({[control]: {\r\n                    touched: true,\r\n                    invalid: false,\r\n                    hasError: false,\r\n                    hasSuccess: true\r\n                }}));\r\n            } else {\r\n                if(!hasError){\r\n                    // invalid pattern\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: true,\r\n                        hasError: true,\r\n                        hasSuccess: prevState[control].hasSuccess\r\n                    }}));\r\n                    hasError = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // enable/diable the form button\r\n    handleSaveButton() {\r\n        let email = document.getElementById(\"email\");\r\n        let phoneNumber = document.getElementById(\"phoneNumber\");\r\n        let isActive = document.getElementsByName(\"isActive\")[0];\r\n        let department = document.getElementById(\"department\");\r\n        let password = document.getElementById(\"password\");\r\n        let confirmPassword = document.getElementById(\"confirmPassword\");\r\n        if((this.state.fullNameControl.touched && this.state.fullNameControl.hasSuccess) && \r\n            (this.state.contactPreferenceControl.touched && !this.state.contactPreferenceControl.hasError) &&\r\n            ((email.required && this.state.emailControl.touched && this.state.emailControl.hasSuccess && !this.state.emailControl.invalid) || !email.required) && \r\n            ((phoneNumber.required && this.state.phoneNumberControl.touched && this.state.phoneNumberControl.hasSuccess) || !phoneNumber.required) &&\r\n            (this.state.genderControl.touched && this.state.genderControl.hasSuccess) && \r\n            ((isActive.required && !this.state.isActiveControl.invalid) || !isActive.required) &&\r\n            ((department.required && (this.state.departmentControl.touched && !this.state.departmentControl.hasError)) || !department.required) &&\r\n            ((password.required && (this.state.passwordControl.touched && !this.state.passwordControl.hasError)) || !password.required) &&\r\n            ((confirmPassword.required && (this.state.confirmPasswordControl.touched && !this.state.confirmPasswordControl.hasError)) || !confirmPassword.required) &&\r\n            this.state.employee.password === this.state.employee.confirmPassword){\r\n            this.setState({employeeForm : {invalid: false}});\r\n        } else {\r\n            this.setState({employeeForm : {invalid: true}});\r\n        }\r\n    }\r\n\r\n    // handle dynamic required validation\r\n    handleDynamicRequired(event) {\r\n        if(event.target.value === \"email\") {\r\n            this.enableHasError(\"email\", true);\r\n            let email = document.getElementById(\"email\");\r\n            let control = \"emailControl\";\r\n            // pattern match test\r\n            if(this.state.employee.contactPreference===\"email\" && email.pattern){\r\n                if(RegExp(email.pattern).test(email.value)){\r\n                    // valid\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: false,\r\n                        hasError: false,\r\n                        hasSuccess: true\r\n                    }}));\r\n                } else {\r\n                    // invalid pattern\r\n                    this.setState(prevState => ({[control]: {\r\n                        touched: true,\r\n                        invalid: true,\r\n                        hasError: true,\r\n                        hasSuccess: false\r\n                    }}));\r\n                }\r\n            }\r\n            this.enableHasError(\"phoneNumber\", false);\r\n        } else if(event.target.value === \"phoneNumber\") {\r\n            this.enableHasError(\"phoneNumber\", true);\r\n            this.enableHasError(\"email\", false);\r\n        }\r\n    }\r\n\r\n    // enable/disabe the hasError property\r\n    enableHasError(controlName, enable) {\r\n        let control = `${controlName}Control`;\r\n        let value = document.getElementById(controlName).value;\r\n        if(enable && (value === null || value.trim().length === 0)){\r\n            this.setState(prevState => ({[control]: {\r\n                hasError: true,\r\n                hasSuccess: false,\r\n            }}), function(){\r\n                this.handleSaveButton();\r\n            });\r\n        } else {\r\n            this.setState(prevState => ({[control]: {\r\n                hasError: false,\r\n                hasSuccess: false\r\n            }}), function(){\r\n                this.handleSaveButton();\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let departments = [\r\n            { id: 1, name: 'Help Desk' },\r\n            { id: 2, name: 'HR' },\r\n            { id: 3, name: 'IT' },\r\n            { id: 4, name: 'Payroll' }\r\n        ];\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"panel panel-primary\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">Create Employee</h3>\r\n                        </div>\r\n                        <div className=\"panel-body\">\r\n                            <div className={\"form-group \" \r\n                                + (this.state.fullNameControl.hasError ? \"has-error\" : \"\") \r\n                                + (this.state.fullNameControl.hasSuccess ? \"has-success\" : \"\")}>\r\n                                <label htmlFor =\"fullName\">Full Name</label>\r\n                                <input id=\"fullName\" type=\"text\" className=\"form-control\" name=\"fullName\" required\r\n                                    value={this.state.employee.fullName} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.fullNameControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Full Name is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.emailControl.hasError ? \"has-error\" : \"\") \r\n                                + (this.state.emailControl.hasSuccess ? \"has-success\" : \"\")}>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input id=\"email\" type=\"text\" className=\"form-control\" name=\"email\" \r\n                                    required={this.state.employee.contactPreference===\"email\"}\r\n                                    pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"\r\n                                    value={this.state.employee.email} \r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.emailControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Email is required\r\n                                        </span>\r\n                                        : null }\r\n                                    { this.state.emailControl.invalid ? \r\n                                        <span className=\"help-block\">\r\n                                            Email is invalid\r\n                                        </span>\r\n                                        : null }    \r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                                <input id=\"phoneNumber\" type=\"text\" className=\"form-control\" name=\"phoneNumber\"\r\n                                    required={this.state.employee.contactPreference===\"phoneNumber\"}\r\n                                    value={this.state.employee.phoneNumber} \r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.phoneNumberControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Phone Number is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" + (this.state.contactPreferenceControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label>Contact Preference</label>\r\n                                <div className=\"form-control\">\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"contactPreference\" value=\"email\" required \r\n                                        onChange={this.handleRadioChange}\r\n                                        onBlur={this.validate}/>\r\n                                    Email\r\n                                </label>\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"contactPreference\" value=\"phoneNumber\" required onChange={this.handleRadioChange}/>\r\n                                    Phone\r\n                                </label>\r\n                                </div>\r\n                                { this.state.contactPreferenceControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Contact Preference is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" + (this.state.genderControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label>Gender</label>\r\n                                <div className=\"form-control\">\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"male\" required onChange={this.handleRadioChange}/>\r\n                                    Male\r\n                                </label>\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"female\" required onChange={this.handleRadioChange}/>\r\n                                    Female\r\n                                </label>\r\n                                </div>\r\n                                { this.state.genderControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Gender is invalid\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-control\">\r\n                                <label className=\"checkbox-inline\">\r\n                                    <input type=\"checkbox\" name=\"isActive\" required onChange={this.handleCheckboxChange}/>Is Active\r\n                                </label>\r\n                                </div>\r\n                                { this.state.isActiveControl.invalid ? \r\n                                        <span className=\"help-block\">\r\n                                            Is Active is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"department\">Department</label>\r\n                                    <select id=\"department\" name=\"department\" className=\"form-control\" required defaultValue={''}\r\n                                        onChange={this.handleSelectChange}\r\n                                        onBlur={this.validate}>\r\n                                        <option value=\"\" disabled>Select Department</option>\r\n                                        {departments.map(department =>(\r\n                                            <option value={department.id} key={department.id} >{department.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    { this.state.departmentControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Department is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"dateOfBirth\">Date of Birth</label>\r\n                                <DatePicker className=\"form-control\" \r\n                                    id=\"dateOfBirth\" name=\"dateOfBirth\" selected={this.state.employee.dateOfBirth} onChange={this.handleDateChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"photoPath\">Photo Path</label>\r\n                                <input id=\"photoPath\" type=\"text\" className=\"form-control\"\r\n                                    name=\"photoPath\" onChange={this.handlePhotoChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                {/* this path is from the list page, static/media/ */}\r\n                                { this.state.previewPhoto ? <img src={this.state.employee.photoPath} height=\"200\" width=\"200\" alt=\"\"/> : null }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button type=\"button\" className=\"btn btn-primary\" \r\n                                    onClick={this.handlePhotoToggle}>\r\n                                Show Preview\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.passwordControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label htmlFor =\"password\">Password</label>\r\n                                <input id=\"password\" type=\"text\" className=\"form-control\" name=\"password\" required\r\n                                    value={this.state.employee.password} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.passwordControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Password is required\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className={\"form-group \" \r\n                                + (this.state.confirmPasswordControl.hasError ? \"has-error\" : \"\")}>\r\n                                <label htmlFor =\"confirmPassword\">Confirm Password</label>\r\n                                <input id=\"confirmPassword\" type=\"text\" className=\"form-control\" name=\"confirmPassword\" required\r\n                                    value={this.state.employee.confirmPassword} \r\n                                    onChange={this.handleChange} \r\n                                    onBlur={this.validate}/>\r\n                                    { this.state.confirmPasswordControl.hasError ? \r\n                                        <span className=\"help-block\">\r\n                                            Confirm Password is required\r\n                                        </span>\r\n                                        : null }\r\n                                    { this.state.employee.password !== this.state.employee.confirmPassword ? \r\n                                        <span className=\"help-block\">\r\n                                            Password and Confirm Password does not match\r\n                                        </span>\r\n                                        : null }\r\n                            </div>\r\n\r\n                            <div className=\"panel-footer\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\" disabled={this.state.employeeForm.invalid}>Save</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                Generated Model :{JSON.stringify(this.state.employee)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateEmployee;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\n\nimport './App.css';\nimport ListEmployees from './employees/ListEmployees';\nimport CreateEmployee from './employees/CreateEmployee';\n\nconst employees = [\n  {\n    id: 1,\n    name: 'Mark',\n    gender: 'Male',\n    contactPreference: 'Email',\n    email: 'mark@pragimtech.com',\n    dateOfBirth: new Date('10/25/1988'),\n    department: 'IT',\n    isActive: true,\n    photoPath: 'mark.png'\n  },\n  {\n    id: 2,\n    name: 'Mary',\n    gender: 'Female',\n    contactPreference: 'Phone',\n    phoneNumber: 2345978640,\n    dateOfBirth: new Date('11/20/1979'),\n    department: 'HR',\n    isActive: true,\n    photoPath: 'mary.png'\n  },\n  {\n    id: 3,\n    name: 'John',\n    gender: 'Male',\n    contactPreference: 'Phone',\n    phoneNumber: 5432978640,\n    dateOfBirth: new Date('3/25/1976'),\n    department: 'IT',\n    isActive: false,\n    photoPath: 'john.png'\n  }]\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-default\">\n            <ul className=\"nav navbar-nav\">\n              <li>\n                <Link to=\"/list\">List</Link>\n              </li>\n              <li>\n                <Link to=\"/create\">Create</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route exact path=\"/\" component={(props) => <ListEmployees {...props} employees={employees} />} />\n            <Route exact path=\"/create\" component={CreateEmployee} />\n            <Route exact path=\"/list\" component={(props) => <ListEmployees {...props} employees={employees} />} />\n            <Route component={(props) => <ListEmployees {...props} employees={employees} />} />\n          </Switch>  \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}