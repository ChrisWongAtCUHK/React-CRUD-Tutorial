{"version":3,"sources":["assets/images sync nonrecursive //.(png|jpe?g|svg)$","assets/images/john.png","assets/images/mark.png","assets/images/mary.png","employees/ListEmployees.js","employees/CreateEmployee.js","App.js","serviceWorker.js","index.js"],"names":["map","./john.png","./mark.png","./mary.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","images","r","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","replace","err","return","importAll","require","ListEmployees","react_default","a","createElement","this","props","employees","employee","className","key","name","src","photoPath","alt","gender","Moment","dateOfBirth","format","contactPreference","phoneNumber","email","department","isActive","toString","Component","CreateEmployee","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","fullName","handleRadioChange","bind","assertThisInitialized","handleCheckboxChange","handleSubmit","event","target","setState","checked","alert","JSON","stringify","preventDefault","onSubmit","htmlFor","type","onChange","handleChange","Date","App","BrowserRouter","Link","to","Switch","Route","exact","path","component","src_employees_ListEmployees","assign","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4645ab3.chunk.js","sourcesContent":["var map = {\n\t\"./john.png\": 31,\n\t\"./mark.png\": 32,\n\t\"./mary.png\": 33\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 30;","module.exports = __webpack_public_path__ + \"static/media/john.2d9f64bb.png\";","module.exports = __webpack_public_path__ + \"static/media/mark.7d951de6.png\";","module.exports = __webpack_public_path__ + \"static/media/mary.6a8df8e0.png\";","import React, { Component } from 'react';\r\nimport Moment from 'moment';\r\nimport './ListEmployees.css';\r\n\r\nfunction importAll(r) {\r\n  let images = {};\r\n  for (var item of r.keys()) {\r\n    images[item.replace('./', '')] = r(item); \r\n  }\r\n  return images;\r\n}\r\n\r\nconst images = importAll(require.context('../assets/images/', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nclass ListEmployees extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.employees.map(employee =>(\r\n          <div className=\"panel panel-primary\" key={employee.id}>\r\n            <div className=\"panel-heading\">\r\n              <h3 className=\"panel-title\">{employee.name}</h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n              <div className=\"col-xs-10\">\r\n                <div className=\"row vertical-align\">\r\n                  <div className=\"col-xs-4\">\r\n                    <img className=\"imageClass\" src={images[employee.photoPath]} alt=\"\"/>\r\n                  </div>\r\n\r\n                  <div className=\"col-xs-8\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Gender\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.gender}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Date of Birth\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {Moment(employee.dateOfBirth).format('ll')}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Contact Preference\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.contactPreference}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Phone\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.phoneNumber}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Email\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.email}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Department\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.department}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-6\">\r\n                        Is Active\r\n                      </div>\r\n                      <div className=\"col-xs-6\">\r\n                        : {employee.isActive.toString()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListEmployees;\r\n","import React, { Component } from 'react';\r\n\r\nclass CreateEmployee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { employee: \r\n            { \r\n                fullName: '',\r\n                email: '',\r\n                phoneNumber:'',\r\n                contactPreference: '',\r\n                gender: ''\r\n            } \r\n        };\r\n\r\n        this.handleRadioChange    = this.handleRadioChange.bind(this);\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n        this.handleSubmit         = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    // handle the input change\r\n    handleChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.id] = event.target.value;\r\n        this.setState({employee: employee});\r\n    }\r\n\r\n    // handle the radio button change\r\n    handleRadioChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.value;\r\n        this.setState({employee: employee});\r\n    }\r\n\r\n    // handle the checkbox change\r\n    handleCheckboxChange(event) {\r\n        let employee = this.state.employee;\r\n        employee[event.target.name] = event.target.checked;\r\n        this.setState({employee: employee});\r\n    }\r\n    \r\n    // handle form submit\r\n    handleSubmit(event) {\r\n        alert(JSON.stringify(this.state.employee));\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"panel panel-primary\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">Create Employee</h3>\r\n                        </div>\r\n                        <div className=\"panel-body\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor =\"fullName\">Full Name</label>\r\n                                <input id=\"fullName\" type=\"text\" className=\"form-control\" name=\"fullName\"\r\n                                    value={this.state.employee.fullName} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input id=\"email\" type=\"text\" className=\"form-control\" name=\"email\" \r\n                                    value={this.state.employee.email} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                                <input id=\"phoneNumber\" type=\"text\" className=\"form-control\" name=\"phoneNumber\" \r\n                                    value={this.state.employee.phoneNumber} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Contact Preference</label>\r\n                                <div className=\"form-control\">\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"contactPreference\" value=\"email\" onChange={this.handleRadioChange}/>\r\n                                    Email\r\n                                </label>\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"contactPreference\" value=\"phone\" onChange={this.handleRadioChange}/>\r\n                                    Phone\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Gender</label>\r\n                                <div className=\"form-control\">\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"male\" onChange={this.handleRadioChange}/>\r\n                                    Male\r\n                                </label>\r\n                                <label className=\"radio-inline\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"female\" onChange={this.handleRadioChange}/>\r\n                                    Female\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-control\">\r\n                                <label className=\"checkbox-inline\">\r\n                                    <input type=\"checkbox\" name=\"isActive\" onChange={this.handleCheckboxChange}/>Is Active\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"panel-footer\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\">Save</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                Generated Model :{JSON.stringify(this.state.employee)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateEmployee;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\n\nimport './App.css';\nimport ListEmployees from './employees/ListEmployees';\nimport CreateEmployee from './employees/CreateEmployee';\n\nconst employees = [\n  {\n    id: 1,\n    name: 'Mark',\n    gender: 'Male',\n    contactPreference: 'Email',\n    email: 'mark@pragimtech.com',\n    dateOfBirth: new Date('10/25/1988'),\n    department: 'IT',\n    isActive: true,\n    photoPath: 'mark.png'\n  },\n  {\n    id: 2,\n    name: 'Mary',\n    gender: 'Female',\n    contactPreference: 'Phone',\n    phoneNumber: 2345978640,\n    dateOfBirth: new Date('11/20/1979'),\n    department: 'HR',\n    isActive: true,\n    photoPath: 'mary.png'\n  },\n  {\n    id: 3,\n    name: 'John',\n    gender: 'Male',\n    contactPreference: 'Phone',\n    phoneNumber: 5432978640,\n    dateOfBirth: new Date('3/25/1976'),\n    department: 'IT',\n    isActive: false,\n    photoPath: 'john.png'\n  }]\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-default\">\n            <ul className=\"nav navbar-nav\">\n              <li>\n                <Link to=\"/list\">List</Link>\n              </li>\n              <li>\n                <Link to=\"/create\">Create</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route exact path=\"/\" component={(props) => <ListEmployees {...props} employees={employees} />} />\n            <Route exact path=\"/create\" component={CreateEmployee} />\n            <Route exact path=\"/list\" component={(props) => <ListEmployees {...props} employees={employees} />} />\n            <Route component={(props) => <ListEmployees {...props} employees={employees} />} />\n          </Switch>  \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}